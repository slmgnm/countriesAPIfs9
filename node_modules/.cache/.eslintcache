[{"C:\\Users\\salee\\countriesAPIfs9\\src\\index.tsx":"1","C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\store.ts":"2","C:\\Users\\salee\\countriesAPIfs9\\src\\App.tsx":"3","C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\reducers.ts":"4","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Favorite.tsx":"5","C:\\Users\\salee\\countriesAPIfs9\\src\\pages\\Home.tsx":"6","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Header.tsx":"7","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\country\\Country.tsx":"8","C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\actions.ts":"9","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Theme.tsx":"10","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\searchCountry.tsx":"11","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\countries\\Countries.tsx":"12"},{"size":505,"mtime":1645888631507,"results":"13","hashOfConfig":"14"},{"size":212,"mtime":1645901067070,"results":"15","hashOfConfig":"14"},{"size":1806,"mtime":1645895181453,"results":"16","hashOfConfig":"14"},{"size":3363,"mtime":1645893556590,"results":"17","hashOfConfig":"14"},{"size":2721,"mtime":1645888278714,"results":"18","hashOfConfig":"14"},{"size":1600,"mtime":1645853769661,"results":"19","hashOfConfig":"14"},{"size":1675,"mtime":1645896656822,"results":"20","hashOfConfig":"14"},{"size":10188,"mtime":1645891307951,"results":"21","hashOfConfig":"14"},{"size":2732,"mtime":1645900581650,"results":"22","hashOfConfig":"14"},{"size":716,"mtime":1645892664612,"results":"23","hashOfConfig":"14"},{"size":3523,"mtime":1645853769533,"results":"24","hashOfConfig":"14"},{"size":5975,"mtime":1645855711600,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hxgv5q",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\salee\\countriesAPIfs9\\src\\index.tsx",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\store.ts",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\App.tsx",["55"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport Country from \"./components/country/Country\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { Paper } from \"@material-ui/core\";\nimport { PaletteType } from \"@material-ui/core\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport FavoriteComp from \"./components/Favorite\";\nimport Home from \"./pages/Home\";\nimport Header from \"./components/Header\";\nfunction App() {\n  const [mode, setMode] = React.useState(\"dark\");\n\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n      },\n    }),\n    []\n  );\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: mode as PaletteType,\n        },\n      }),\n    [mode]\n  );\n  return (\n    <ThemeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        \n          <CssBaseline />\n          <Routes>\n            <Route path='/' element={<Navigate to={\"/home\"}></Navigate>} />\n            <Route path='/home' element={<Home />} />\n            <Route path='/:country' element={<Country />} />\n            <Route\n              path='/favorite'\n              element={\n                <>\n                  <Header />\n                  <FavoriteComp />\n                </>\n              }\n            />\n          </Routes>\n        \n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    myTheme: state.setTheme,\n  };\n};\nexport const ThemeContext = React.createContext({ toggleColorMode: () => {} });\n\nexport default connect(mapStateToProps)(App);\n","C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\reducers.ts",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Favorite.tsx",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\pages\\Home.tsx",["56"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { currentCountries } from \"../redux/actions\";\r\n// import { Button } from \"@mui/material\";\r\n// import AppBar from \"./AppBar.jsx\";\r\nimport CurrentCountries from \"../components/countries/Countries\";\r\nimport SearchCountry from \"../components/searchCountry\";\r\n\r\nimport Header from \"../components/Header\";\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\n\r\ninterface IProps {\r\n  currentCountries: any;\r\n  countries: any;\r\n  filterCountries:  (arga: string, argb: ICountry[]) => void;\r\n}\r\nconst Home = ({ currentCountries, countries, filterCountries }: IProps) => {\r\n    console.log({ currentCountries, countries, filterCountries });\r\n  useEffect(() => {\r\n    currentCountries(\r\n      \"https://restcountries.com/v3/all?fields=name,population,flags,region,capital\"\r\n    );\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SearchCountry />\r\n      <CurrentCountries\r\n        countries={countries}\r\n        filterCountries={filterCountries}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    countries: state.selectCurrentCountries,\r\n    filterCountries: state.filterCountriesSpecific,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  currentCountries,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Header.tsx",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\components\\country\\Country.tsx",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCountry } from \"../../redux/actions\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Container, Button, Typography, Box } from \"@mui/material/\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport \"../../index.css\";\r\nconst axios = require(\"axios\").default;\r\ninterface ICountry  {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n};\r\ninterface IProps {\r\n  country: ICountry;\r\n  selectCountry: (arg: ICountry) => void;\r\n}\r\nconst Country: React.FC<IProps> = ({ selectCountry, country }) => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const currentCountry = params.country;\r\n  const [borders, setBorders] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://restcountries.com/v3/name/${currentCountry}?fields=name,population,flags,tld,currencies,languages,borders,region,subregion,capital,`\r\n      )\r\n      .then((res: any) => selectCountry(res.data[0]));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (country.borders !== undefined) {\r\n      let boarderingList: any = [];\r\n      country.borders.forEach((border: string) => {\r\n        axios\r\n          .get(`https://restcountries.com/v2/alpha?codes=${border}`)\r\n          .then((res: any) => boarderingList.push(res.data[0].name))\r\n          .then(() => {\r\n            if (boarderingList.length === country.borders.length) {\r\n              setBorders(boarderingList);\r\n            }\r\n          });\r\n      });\r\n    }\r\n  }, [country]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      {country.region === undefined ? null : (\r\n        <Container maxWidth=\"lg\" className=\"container\">\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ padding: \"5px 20px\" }}\r\n            onClick={() => navigate(\"/\")}\r\n          >\r\n            <KeyboardBackspaceIcon sx={{ marginRight: \"10px\" }} />\r\n            <Typography\r\n            \r\n              sx={{\r\n                typography: \"body2\",\r\n                textTransform: \"none\",\r\n              }}\r\n            >\r\n              Back\r\n            </Typography>\r\n          </Button>\r\n          <Box className=\"box-individual-country\">\r\n            <Box\r\n              className=\"img-country\"\r\n              sx={{\r\n                backgroundImage: `url(\"${country.flags[1]}\")`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                width: \"45%\",\r\n                height: \"400\",\r\n                boxShadow: 3,\r\n              }}\r\n            ></Box>\r\n            <Box>\r\n              <Typography variant=\"h2\" className=\"countryName\" >\r\n                {country.name.common}\r\n              </Typography>\r\n              <Box >\r\n                <Box className=\"info-ul-1\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Native Name:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {\r\n                      country.name.nativeName[Object.keys(country.languages)[0]]\r\n                        .common\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Population:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {country.population}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className='info-ul-p'\r\n                  >\r\n                    {country.region}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Sub region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.subregion}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Capital:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.capital[0]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"info-ul-2\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Top Level Domain:{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.tld[0]}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Currencies:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\r\n                      country.currencies[Object.keys(country.currencies)[0]]\r\n                        .name\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Languages:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.languages[Object.keys(country.languages)[0]]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"border-countries\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Border Countries:\r\n                  </Typography>\r\n                  <Box>\r\n                    {country.borders.length === 0 ? (\r\n                      <Button\r\n                        sx={{ marginRigth: \"5px\" }}\r\n                        variant=\"contained\"\r\n                        className=\"btn-border\"\r\n                      >\r\n                        No countries\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    {borders.map((border) => {\r\n                      return (\r\n                        <Button\r\n                          sx={{ marginRigth: \"5px\" }}\r\n                          variant=\"contained\"\r\n                          className=\"btn-border\"\r\n                          href={`/${border}`}\r\n                          key={border}\r\n                        >\r\n                          {border}\r\n                        </Button>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\ninterface IState {\r\n  currentCountry?: any;\r\n  favoriteCountries?: { favoriteCountries: IProps; favorites: string[] };\r\n  filterCountriesSpecific?: [];\r\n  selectCurrentCountries?: IProps;\r\n  textToFilter?: string;\r\n}\r\nconst mapDispatchToProps = {\r\n  selectCountry,\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    country: state.currentCountry,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);\r\n","C:\\Users\\salee\\countriesAPIfs9\\src\\redux\\actions.ts",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\components\\Theme.tsx",[],"C:\\Users\\salee\\countriesAPIfs9\\src\\components\\searchCountry.tsx",["58","59"],"import React, { useState } from \"react\";\r\nimport { connect, DefaultRootState, MapStateToPropsParam } from \"react-redux\";\r\nimport {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n} from \"../redux/actions\";\r\nimport {\r\n  Container,\r\n  InputAdornment,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material/\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select/Select\";\r\n\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\ninterface IProps {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n  textToSearch?: string;\r\n  countries: ICountry[];\r\n}\r\nconst SearchCountry = ({\r\n  filterCountriesSpecific,\r\n  filterCountriesRegion,\r\n  countries,\r\n  changeText,\r\n  textToSearch,\r\n}: IProps) => {\r\n  const [region, setRegion] = useState(\"All\");\r\n  const handleChangeCountry = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    changeText(event.target.value);\r\n    filterCountriesSpecific(event.target.value, countries);\r\n  };\r\n  const handleChangeRegion = (event: SelectChangeEvent) => {\r\n    setRegion(event.target.value);\r\n    filterCountriesRegion(event.target.value.toLowerCase());\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        id=\"search-country\"\r\n        sx={{ m: 1, width: \"400px\", margin: \"50px 0\", marginRight: \"20px\" }}\r\n        placeholder=\"Search for a country...\"\r\n        value={textToSearch}\r\n        onChange={handleChangeCountry}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <FormControl sx={{ width: \"250px\" }}>\r\n        <InputLabel id=\"region-simple-select-label\">\r\n          Filter by Region\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"region-simple-select-label\"\r\n          id=\"simple-select-region\"\r\n          value={region}\r\n          label=\"Filter by Region\"\r\n          onChange={handleChangeRegion}\r\n        >\r\n          <MenuItem value={\"Africa\"}>Africa</MenuItem>\r\n          <MenuItem value={\"Americas\"}>Americas</MenuItem>\r\n          <MenuItem value={\"Asia\"}>Asia</MenuItem>\r\n          <MenuItem value={\"Europe\"}>Europe</MenuItem>\r\n          <MenuItem value={\"Oceania\"}>Oceania</MenuItem>\r\n          <MenuItem value={\"All\"}>All</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    countries: state.selectCurrentCountries,\r\n    textToSearch: state.textToFilter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps: {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n} = {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\r\n","C:\\Users\\salee\\countriesAPIfs9\\src\\components\\countries\\Countries.tsx",["60"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Button,\r\n} from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n  addFavorite,\r\n  removeFavorite,\r\n} from \"../../redux/actions\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n// import Country from \"../country/Country\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./style.css\";\r\n// import { useTheme } from \"@mui/material\";\r\n\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName: {\r\n      msa: {\r\n        official: string;\r\n        common: string;\r\n      };\r\n    };\r\n  };\r\n  capital: string[];\r\n  region: string;\r\n  population: number;\r\n}\r\n\r\nfunction Countries({\r\n  countries,\r\n  filterCountries,\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n  textToSearch,\r\n  addFavorite,\r\n  favorites,\r\n  removeFavorite,\r\n}: any) {\r\n  useEffect(() => {\r\n    defaultCountriesSpecific();\r\n    changeText(\"\");\r\n  }, [countries]);\r\n  let countriesToShow = [];\r\n  filterCountries.length === 0\r\n    ? (countriesToShow = countries)\r\n    : (countriesToShow = filterCountries);\r\n\r\n  return textToSearch.length > 0 && filterCountries.length === 0 ? (\r\n    <Container maxWidth='lg'>\r\n      <Typography variant='body1' sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}>\r\n        Not available\r\n      </Typography>\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <Grid container spacing={8} id='countries'>\r\n        {countriesToShow.map((country: ICountry, index: number) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\r\n              <Card>\r\n                <Link\r\n                  href={`/${country.name.common}`}\r\n                  underline='none'\r\n                  key={country.name.common}\r\n                >\r\n                  <CardMedia\r\n                    component='img'\r\n                    image={country.flags[1]}\r\n                    alt={`${country.name.common} flag`}\r\n                    height='170px'\r\n                    sx={{ borderBottom: \"1px solid #dbd6d6\" }}\r\n                  />\r\n                </Link>\r\n\r\n                <CardContent>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant='h3'\r\n                    sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}\r\n                  >\r\n                    {country.name.common}\r\n                  </Typography>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Population:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.population}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Region:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.region}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Capital:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.capital[0]}\r\n                      {favorites?.includes(country.name.common) ? (\r\n                        <Button\r\n                          onClick={() => {\r\n                            removeFavorite(country.name.common);\r\n                          }}\r\n                          style={{ color: \"red\" }}\r\n                        >\r\n                          <FavoriteIcon />\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          onClick={() => {\r\n                            addFavorite(country);\r\n                          }}\r\n                        >\r\n                          <FavoriteBorderIcon />\r\n                        </Button>\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  textToSearch: state.textToFilter,\r\n  favoriteCountries: state.favoriteCountries.favoriteCountries,\r\n  favorites: state.favoriteCountries.favorites,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (arg: any) => null) => ({\r\n  addFavorite: (country: ICountry | any) => dispatch(addFavorite(country)),\r\n  removeFavorite: (country: ICountry | any) =>\r\n    dispatch(removeFavorite(country)),\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);\r\n",{"ruleId":"61","severity":1,"message":"62","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":38,"column":6,"nodeType":"67","endLine":38,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":41,"column":6,"nodeType":"67","endLine":41,"endColumn":8,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":2,"column":19,"nodeType":"63","messageId":"64","endLine":2,"endColumn":35},{"ruleId":"61","severity":1,"message":"72","line":2,"column":37,"nodeType":"63","messageId":"64","endLine":2,"endColumn":57},{"ruleId":"65","severity":1,"message":"73","line":57,"column":6,"nodeType":"67","endLine":57,"endColumn":17,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentCountries'. Either include it or remove the dependency array. If 'currentCountries' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["75"],"React Hook useEffect has missing dependencies: 'currentCountry' and 'selectCountry'. Either include them or remove the dependency array. If 'selectCountry' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["76"],"'DefaultRootState' is defined but never used.","'MapStateToPropsParam' is defined but never used.","React Hook useEffect has missing dependencies: 'changeText' and 'defaultCountriesSpecific'. Either include them or remove the dependency array. If 'defaultCountriesSpecific' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [currentCountries]",{"range":"84","text":"85"},"Update the dependencies array to be: [currentCountry, selectCountry]",{"range":"86","text":"87"},"Update the dependencies array to be: [changeText, countries, defaultCountriesSpecific]",{"range":"88","text":"89"},[1104,1106],"[currentCountries]",[1325,1327],"[currentCountry, selectCountry]",[1176,1187],"[changeText, countries, defaultCountriesSpecific]"]