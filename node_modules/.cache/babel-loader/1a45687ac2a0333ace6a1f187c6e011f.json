{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salee\\\\countriesAPIfs9\\\\src\\\\components\\\\country\\\\Country.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../Header\";\nimport { connect } from \"react-redux\";\nimport { selectCountry } from \"../../redux/actions\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Button, Typography, Box } from \"@mui/material/\";\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\nimport \"../../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\n;\n\nconst Country = _ref => {\n  _s();\n\n  let {\n    selectCountry,\n    country\n  } = _ref;\n  const navigate = useNavigate();\n  const params = useParams();\n  const currentCountry = params.country;\n  const [borders, setBorders] = useState([]);\n  useEffect(() => {\n    axios.get(`https://restcountries.com/v3/name/${currentCountry}?fields=name,population,flags,tld,currencies,languages,borders,region,subregion,capital,`).then(res => selectCountry(res.data[0]));\n  }, []);\n  useEffect(() => {\n    if (country.borders !== undefined) {\n      let boarderingList = [];\n      country.borders.forEach(border => {\n        axios.get(`https://restcountries.com/v2/alpha?codes=${border}`).then(res => boarderingList.push(res.data[0].name)).then(() => {\n          if (boarderingList.length === country.borders.length) {\n            setBorders(boarderingList);\n          }\n        });\n      });\n    }\n  }, [country]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), country.region === undefined ? null : /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          padding: \"5px 20px\"\n        },\n        onClick: () => navigate(\"/\"),\n        children: [/*#__PURE__*/_jsxDEV(KeyboardBackspaceIcon, {\n          sx: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            typography: \"body2\",\n            textTransform: \"none\"\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"box-individual-country\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: \"img-country\",\n          sx: {\n            backgroundImage: `url(\"${country.flags[1]}\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            width: \"45%\",\n            height: \"400\",\n            boxShadow: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: \"countryName\",\n            children: country.name.common\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: \"info-ul-1\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                className: \"info-ul-p\",\n                children: \"Native Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                className: \"info-ul-p\",\n                children: country.name.nativeName[Object.keys(country.languages)[0]].common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                className: \"info-ul-p\",\n                children: \"Population:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                className: \"info-ul-p\",\n                children: country.population\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                className: \"info-ul-p\",\n                children: country.region\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Sub region:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                children: country.subregion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Capital:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                children: country.capital[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"info-ul-2\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: [\"Top Level Domain:\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                children: country.tld[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Currencies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                children: country.currencies[Object.keys(country.currencies)[0]].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Languages:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  display: \"inline\",\n                  opacity: \"0.7\"\n                },\n                variant: \"body2\",\n                children: country.languages[Object.keys(country.languages)[0]]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: \"border-countries\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  display: \"inline\",\n                  fontWeight: \"bold\",\n                  opacity: \"0.9\"\n                },\n                children: \"Border Countries:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [country.borders.length === 0 ? /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    marginRigth: \"5px\"\n                  },\n                  variant: \"contained\",\n                  className: \"btn-border\",\n                  children: \"No countries\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this) : null, borders.map(border => {\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    sx: {\n                      marginRigth: \"5px\"\n                    },\n                    variant: \"contained\",\n                    className: \"btn-border\",\n                    href: `/${border}`,\n                    children: border\n                  }, border, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Country, \"gzqdhf78geZHdmAD/9wzq7KXDOA=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Country;\nconst mapDispatchToProps = {\n  selectCountry\n};\n\nconst mapStateToProps = state => {\n  return {\n    country: state.currentCountry\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/country/Country.tsx"],"names":["React","useEffect","useState","Header","connect","selectCountry","useNavigate","useParams","Container","Button","Typography","Box","KeyboardBackspaceIcon","axios","require","default","Country","country","navigate","params","currentCountry","borders","setBorders","get","then","res","data","undefined","boarderingList","forEach","border","push","name","length","region","padding","marginRight","typography","textTransform","backgroundImage","flags","backgroundSize","backgroundPosition","width","height","boxShadow","common","display","fontWeight","opacity","nativeName","Object","keys","languages","population","subregion","capital","tld","currencies","marginRigth","map","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCountry } from \"../../redux/actions\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Container, Button, Typography, Box } from \"@mui/material/\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport \"../../index.css\";\r\nconst axios = require(\"axios\").default;\r\ninterface ICountry  {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n};\r\ninterface IProps {\r\n  country: ICountry;\r\n  selectCountry: (arg: ICountry) => void;\r\n}\r\nconst Country: React.FC<IProps> = ({ selectCountry, country }) => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const currentCountry = params.country;\r\n  const [borders, setBorders] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://restcountries.com/v3/name/${currentCountry}?fields=name,population,flags,tld,currencies,languages,borders,region,subregion,capital,`\r\n      )\r\n      .then((res: any) => selectCountry(res.data[0]));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (country.borders !== undefined) {\r\n      let boarderingList: any = [];\r\n      country.borders.forEach((border: string) => {\r\n        axios\r\n          .get(`https://restcountries.com/v2/alpha?codes=${border}`)\r\n          .then((res: any) => boarderingList.push(res.data[0].name))\r\n          .then(() => {\r\n            if (boarderingList.length === country.borders.length) {\r\n              setBorders(boarderingList);\r\n            }\r\n          });\r\n      });\r\n    }\r\n  }, [country]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      {country.region === undefined ? null : (\r\n        <Container maxWidth=\"lg\" className=\"container\">\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ padding: \"5px 20px\" }}\r\n            onClick={() => navigate(\"/\")}\r\n          >\r\n            <KeyboardBackspaceIcon sx={{ marginRight: \"10px\" }} />\r\n            <Typography\r\n            \r\n              sx={{\r\n                typography: \"body2\",\r\n                textTransform: \"none\",\r\n              }}\r\n            >\r\n              Back\r\n            </Typography>\r\n          </Button>\r\n          <Box className=\"box-individual-country\">\r\n            <Box\r\n              className=\"img-country\"\r\n              sx={{\r\n                backgroundImage: `url(\"${country.flags[1]}\")`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                width: \"45%\",\r\n                height: \"400\",\r\n                boxShadow: 3,\r\n              }}\r\n            ></Box>\r\n            <Box>\r\n              <Typography variant=\"h2\" className=\"countryName\" >\r\n                {country.name.common}\r\n              </Typography>\r\n              <Box >\r\n                <Box className=\"info-ul-1\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Native Name:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {\r\n                      country.name.nativeName[Object.keys(country.languages)[0]]\r\n                        .common\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Population:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {country.population}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className='info-ul-p'\r\n                  >\r\n                    {country.region}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Sub region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.subregion}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Capital:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.capital[0]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"info-ul-2\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Top Level Domain:{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.tld[0]}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Currencies:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\r\n                      country.currencies[Object.keys(country.currencies)[0]]\r\n                        .name\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Languages:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.languages[Object.keys(country.languages)[0]]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"border-countries\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Border Countries:\r\n                  </Typography>\r\n                  <Box>\r\n                    {country.borders.length === 0 ? (\r\n                      <Button\r\n                        sx={{ marginRigth: \"5px\" }}\r\n                        variant=\"contained\"\r\n                        className=\"btn-border\"\r\n                      >\r\n                        No countries\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    {borders.map((border) => {\r\n                      return (\r\n                        <Button\r\n                          sx={{ marginRigth: \"5px\" }}\r\n                          variant=\"contained\"\r\n                          className=\"btn-border\"\r\n                          href={`/${border}`}\r\n                          key={border}\r\n                        >\r\n                          {border}\r\n                        </Button>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\ninterface IState {\r\n  currentCountry?: any;\r\n  favoriteCountries?: { favoriteCountries: IProps; favorites: string[] };\r\n  filterCountriesSpecific?: [];\r\n  selectCurrentCountries?: IProps;\r\n  textToFilter?: string;\r\n}\r\nconst mapDispatchToProps = {\r\n  selectCountry,\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    country: state.currentCountry,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);\r\n"]},"metadata":{},"sourceType":"module"}