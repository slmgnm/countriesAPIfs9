{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{addFavorite as _addFavorite,removeFavorite}from\"../redux/actions\";import{Container,Card,CardMedia,Grid,Link,Typography,CardContent}from\"@mui/material/\";// import { ICountries } from \"./interfaces\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Favorite=function Favorite(_ref){var favoriteCountries=_ref.favoriteCountries;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{className:\"container\",children:[/*#__PURE__*/_jsx(Typography,{textAlign:\"center\",paddingBottom:10,variant:\"h4\",sx:{fontWeight:\"bold\",opacity:\"0.9\"},children:\"Favorites\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:8,id:\"countries\",children:favoriteCountries===null||favoriteCountries===void 0?void 0:favoriteCountries.map(function(country,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,lg:3,sx:{justifyContent:\"space-between\",alignItems:\"center\",flexWrap:\"wrap\"},children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Link,{href:\"/\".concat(country.name.common),underline:\"none\",children:[/*#__PURE__*/_jsx(CardMedia,{component:\"img\",image:country.flags[1],alt:\"\".concat(country.name.common,\" flag\"),height:\"170px\",sx:{borderBottom:\"1px solid #dbd6d6\"}}),\" \"]},country.name.common),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{className:\"info-ul-p\",gutterBottom:true,variant:\"h3\",sx:{fontWeight:\"bold\",fontSize:\"19px\"},children:country.name.common})})]},index)},index);})})]})});};var mapStateToProps=function mapStateToProps(state){return{favoriteCountries:state.favoriteCountries.favoriteCountries};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addFavorite:function addFavorite(a){return dispatch(_addFavorite(a));},removeFavorite:removeFavorite};};export default connect(mapStateToProps,mapDispatchToProps)(Favorite);","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/Favorite.tsx"],"names":["React","connect","addFavorite","removeFavorite","Container","Card","CardMedia","Grid","Link","Typography","CardContent","Favorite","favoriteCountries","fontWeight","opacity","map","country","index","justifyContent","alignItems","flexWrap","name","common","flags","borderBottom","fontSize","mapStateToProps","state","mapDispatchToProps","dispatch","a"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAW,GAAXA,CAAAA,YAAT,CAAsBC,cAAtB,KAA4C,kBAA5C,CACA,OACEC,SADF,CAEEC,IAFF,CAGEC,SAHF,CAIEC,IAJF,CAKEC,IALF,CAMEC,UANF,CAOEC,WAPF,KAQO,gBARP,CASA;6IAeA,GAAMC,CAAAA,QAA0B,CAAG,QAA7BA,CAAAA,QAA6B,MAA2B,IAAxBC,CAAAA,iBAAwB,MAAxBA,iBAAwB,CAC5D,mBACE,sCACE,MAAC,SAAD,EAAW,SAAS,CAAC,WAArB,wBACE,KAAC,UAAD,EACE,SAAS,CAAC,QADZ,CAEE,aAAa,CAAE,EAFjB,CAGE,OAAO,CAAC,IAHV,CAIE,EAAE,CAAE,CACFC,UAAU,CAAE,MADV,CAEFC,OAAO,CAAE,KAFP,CAJN,uBADF,cAYE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,EAAE,CAAC,WAA/B,UACGF,iBADH,SACGA,iBADH,iBACGA,iBAAiB,CAAEG,GAAnB,CAAuB,SAACC,OAAD,CAAUC,KAAV,qBACtB,KAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,EAFN,CAGE,EAAE,CAAE,CAHN,CAIE,EAAE,CAAE,CAJN,CAKE,EAAE,CAAE,CALN,CAOE,EAAE,CAAE,CACFC,cAAc,CAAE,eADd,CAEFC,UAAU,CAAE,QAFV,CAGFC,QAAQ,CAAE,MAHR,CAPN,uBAaE,MAAC,IAAD,yBACE,MAAC,IAAD,EACE,IAAI,YAAMJ,OAAO,CAACK,IAAR,CAAaC,MAAnB,CADN,CAEE,SAAS,CAAC,MAFZ,wBAKE,KAAC,SAAD,EACE,SAAS,CAAC,KADZ,CAEE,KAAK,CAAEN,OAAO,CAACO,KAAR,CAAc,CAAd,CAFT,CAGE,GAAG,WAAKP,OAAO,CAACK,IAAR,CAAaC,MAAlB,SAHL,CAIE,MAAM,CAAC,OAJT,CAKE,EAAE,CAAE,CAAEE,YAAY,CAAE,mBAAhB,CALN,EALF,CAWK,GAXL,GAGOR,OAAO,CAACK,IAAR,CAAaC,MAHpB,CADF,cAcE,KAAC,WAAD,wBACE,KAAC,UAAD,EACE,SAAS,CAAC,WADZ,CAEE,YAAY,KAFd,CAGE,OAAO,CAAC,IAHV,CAIE,EAAE,CAAE,CAAET,UAAU,CAAE,MAAd,CAAsBY,QAAQ,CAAE,MAAhC,CAJN,UAMGT,OAAO,CAACK,IAAR,CAAaC,MANhB,EADF,EAdF,GAAWL,KAAX,CAbF,EAMOA,KANP,CADsB,EAAvB,CADH,EAZF,GADF,EADF,CA4DD,CA7DD,CA+DA,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACtC,MAAO,CAAEf,iBAAiB,CAAEe,KAAK,CAACf,iBAAN,CAAwBA,iBAA7C,CAAP,CACD,CAFD,CAIA,GAAMgB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAoB,CAC7C3B,WAAW,CAAE,qBAAC4B,CAAD,QAAeD,CAAAA,QAAQ,CAAC3B,YAAW,CAAC4B,CAAD,CAAZ,CAAvB,EADgC,CAE7C3B,cAAc,CAAdA,cAF6C,CAApB,EAA3B,CAKA,cAAeF,CAAAA,OAAO,CAASyB,eAAT,CAA0BE,kBAA1B,CAAP,CAAqDjB,QAArD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFavorite, removeFavorite } from \"../redux/actions\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  CardContent,\r\n} from \"@mui/material/\";\r\n// import { ICountries } from \"./interfaces\";\r\n\r\ninterface IProps {\r\n  favoriteCountries: {\r\n    capital: string[];\r\n    flags: string[];\r\n    name: {\r\n      common: string;\r\n      nativeName: any;\r\n      official: string;\r\n    };\r\n    population: number;\r\n    region: string;\r\n  }[];\r\n}\r\nconst Favorite: React.FC<IProps> = ({ favoriteCountries }) => {\r\n  return (\r\n    <>\r\n      <Container className='container'>\r\n        <Typography\r\n          textAlign='center'\r\n          paddingBottom={10}\r\n          variant='h4'\r\n          sx={{\r\n            fontWeight: \"bold\",\r\n            opacity: \"0.9\",\r\n          }}\r\n        >\r\n          Favorites\r\n        </Typography>\r\n        <Grid container spacing={8} id='countries'>\r\n          {favoriteCountries?.map((country, index) => (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              lg={3}\r\n              key={index}\r\n              sx={{\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Card key={index}>\r\n                <Link\r\n                  href={`/${country.name.common}`}\r\n                  underline='none'\r\n                  key={country.name.common}\r\n                >\r\n                  <CardMedia\r\n                    component='img'\r\n                    image={country.flags[1]}\r\n                    alt={`${country.name.common} flag`}\r\n                    height='170px'\r\n                    sx={{ borderBottom: \"1px solid #dbd6d6\" }}\r\n                  />{\" \"}\r\n                </Link>\r\n                <CardContent>\r\n                  <Typography\r\n                    className='info-ul-p'\r\n                    gutterBottom\r\n                    variant='h3'\r\n                    sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}\r\n                  >\r\n                    {country.name.common}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return { favoriteCountries: state.favoriteCountries.favoriteCountries };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  addFavorite: (a: string) => dispatch(addFavorite(a)),\r\n  removeFavorite,\r\n});\r\n\r\nexport default connect<IProps>(mapStateToProps, mapDispatchToProps)(Favorite);\r\n"]},"metadata":{},"sourceType":"module"}