{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var axios=require(\"axios\").default;export var CURRENT_COUNTRIES=\"CURRENT_COUNTRIES\";export function currentCountries(url){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var countries;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(url);case 2:countries=_context.sent;dispatch({type:CURRENT_COUNTRIES,payload:countries.data});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export var FILTER_COUNTRIES_REGION=\"FILTER_COUNTRIES_REGION\";export function filterCountriesRegion(region){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var url,countries;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"https://restcountries.com/v3/region/\".concat(region,\"?fields=name,population,flags,region,capital\");if(region===\"all\"){url=\"https://restcountries.com/v3/all?fields=name,population,flags,region,capital\";}_context2.next=4;return axios.get(url);case 4:countries=_context2.sent;dispatch({type:FILTER_COUNTRIES_REGION,payload:countries.data});case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export var FILTER_COUNTRIES_SPECIFIC=\"FILTER_COUNTRIES_SPECIFIC\";export function filterCountriesSpecific(text,countries){return{type:FILTER_COUNTRIES_SPECIFIC,payload:{text:text,countries:countries}};}export var DEFAULT_COUNTRIES_SPECIFIC=\"DEFAULT_COUNTRIES_SPECIFIC\";export function defaultCountriesSpecific(){return{type:DEFAULT_COUNTRIES_SPECIFIC,payload:\"\"};}export var SELECT_COUNTRY=\"SELECT_COUNTRY\";export function selectCountry(country){return{type:SELECT_COUNTRY,payload:country};}export var CHANGE_TEXT=\"CHANGE_TEXT\";export function changeText(text){// console.log(text);\nreturn{type:CHANGE_TEXT,payload:text};}export var ADD_FAVORITE=\"ADD_FAVORITE\";export function addFavorite(countryName){return{type:ADD_FAVORITE,payload:countryName};}export var REMOVE_FAVORITE=\"REMOVE_FAVORITE\";export function removeFavorite(countryName){return{type:REMOVE_FAVORITE,payload:countryName};}","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/redux/actions.ts"],"names":["axios","require","default","CURRENT_COUNTRIES","currentCountries","url","dispatch","get","countries","type","payload","data","FILTER_COUNTRIES_REGION","filterCountriesRegion","region","FILTER_COUNTRIES_SPECIFIC","filterCountriesSpecific","text","DEFAULT_COUNTRIES_SPECIFIC","defaultCountriesSpecific","SELECT_COUNTRY","selectCountry","country","CHANGE_TEXT","changeText","ADD_FAVORITE","addFavorite","countryName","REMOVE_FAVORITE","removeFavorite"],"mappings":"uSAAA,GAAMA,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B,CAkBA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,mBAA1B,CACP,MAAO,SAASC,CAAAA,gBAAT,CAA0BC,GAA1B,CAAuC,CAC5C,+FAAO,iBACLC,QADK,sJAGmBN,CAAAA,KAAK,CAACO,GAAN,CAAUF,GAAV,CAHnB,QAGCG,SAHD,eAILF,QAAQ,CAAC,CACPG,IAAI,CAAEN,iBADC,CAEPO,OAAO,CAAEF,SAAS,CAACG,IAFZ,CAAD,CAAR,CAJK,sDAAP,+DASD,CAED,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,yBAAhC,CACP,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,MAA/B,CAA+C,CACpD,gGAAO,kBACLR,QADK,wIAGDD,GAHC,+CAG4CS,MAH5C,iDAIL,GAAIA,MAAM,GAAK,KAAf,CAAsB,CACpBT,GAAG,+EAAH,CACD,CANI,uBAOmBL,CAAAA,KAAK,CAACO,GAAN,CAAUF,GAAV,CAPnB,QAOCG,SAPD,gBAQLF,QAAQ,CAAC,CACPG,IAAI,CAAEG,uBADC,CAEPF,OAAO,CAAEF,SAAS,CAACG,IAFZ,CAAD,CAAR,CARK,wDAAP,iEAaD,CAED,MAAO,IAAMI,CAAAA,yBAAyB,CAAG,2BAAlC,CACP,MAAO,SAASC,CAAAA,uBAAT,CAAiCC,IAAjC,CAA+CT,SAA/C,CAAsE,CAC3E,MAAO,CACLC,IAAI,CAAEM,yBADD,CAELL,OAAO,CAAE,CAAEO,IAAI,CAAJA,IAAF,CAAQT,SAAS,CAATA,SAAR,CAFJ,CAAP,CAID,CAED,MAAO,IAAMU,CAAAA,0BAA0B,CAAG,4BAAnC,CACP,MAAO,SAASC,CAAAA,wBAAT,EAAoC,CACzC,MAAO,CACLV,IAAI,CAAES,0BADD,CAELR,OAAO,CAAE,EAFJ,CAAP,CAID,CAiBD,MAAO,IAAMU,CAAAA,cAAc,CAAG,gBAAvB,CACP,MAAO,SAASC,CAAAA,aAAT,CAAuBC,OAAvB,CAA0C,CAC/C,MAAO,CACLb,IAAI,CAAEW,cADD,CAELV,OAAO,CAAEY,OAFJ,CAAP,CAID,CAED,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,SAASC,CAAAA,UAAT,CAAoBP,IAApB,CAAkC,CACvC;AACA,MAAO,CACLR,IAAI,CAAEc,WADD,CAELb,OAAO,CAAEO,IAFJ,CAAP,CAID,CAED,MAAO,IAAMQ,CAAAA,YAAY,CAAG,cAArB,CACP,MAAO,SAASC,CAAAA,WAAT,CAAqBC,WAArB,CAA0C,CAC/C,MAAO,CACLlB,IAAI,CAAEgB,YADD,CAELf,OAAO,CAAEiB,WAFJ,CAAP,CAID,CACD,MAAO,IAAMC,CAAAA,eAAe,CAAG,iBAAxB,CACP,MAAO,SAASC,CAAAA,cAAT,CAAwBF,WAAxB,CAA6C,CAClD,MAAO,CACLlB,IAAI,CAAEmB,eADD,CAELlB,OAAO,CAAEiB,WAFJ,CAAP,CAID","sourcesContent":["const axios = require(\"axios\").default;\r\ninterface ICountrie {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\n\r\nexport const CURRENT_COUNTRIES = \"CURRENT_COUNTRIES\";\r\nexport function currentCountries(url: string) {\r\n  return async (\r\n    dispatch: (arg0: { type: string; payload: ICountrie[] }) => void\r\n  ) => {\r\n    const countries = await axios.get(url);\r\n    dispatch({\r\n      type: CURRENT_COUNTRIES,\r\n      payload: countries.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport const FILTER_COUNTRIES_REGION = \"FILTER_COUNTRIES_REGION\";\r\nexport function filterCountriesRegion(region: string) {\r\n  return async (\r\n    dispatch: (arg0: { type: string; payload: ICountrie[] }) => void\r\n  ) => {\r\n    let url = `https://restcountries.com/v3/region/${region}?fields=name,population,flags,region,capital`;\r\n    if (region === \"all\") {\r\n      url = `https://restcountries.com/v3/all?fields=name,population,flags,region,capital`;\r\n    }\r\n    const countries = await axios.get(url);\r\n    dispatch({\r\n      type: FILTER_COUNTRIES_REGION,\r\n      payload: countries.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport const FILTER_COUNTRIES_SPECIFIC = \"FILTER_COUNTRIES_SPECIFIC\";\r\nexport function filterCountriesSpecific(text: string, countries: ICountry[]) {\r\n  return {\r\n    type: FILTER_COUNTRIES_SPECIFIC,\r\n    payload: { text, countries },\r\n  };\r\n}\r\n\r\nexport const DEFAULT_COUNTRIES_SPECIFIC = \"DEFAULT_COUNTRIES_SPECIFIC\";\r\nexport function defaultCountriesSpecific() {\r\n  return {\r\n    type: DEFAULT_COUNTRIES_SPECIFIC,\r\n    payload: \"\",\r\n  };\r\n}\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\nexport const SELECT_COUNTRY = \"SELECT_COUNTRY\";\r\nexport function selectCountry(country: ICountry) {\r\n  return {\r\n    type: SELECT_COUNTRY,\r\n    payload: country,\r\n  };\r\n}\r\n\r\nexport const CHANGE_TEXT = \"CHANGE_TEXT\";\r\nexport function changeText(text: string) {\r\n  // console.log(text);\r\n  return {\r\n    type: CHANGE_TEXT,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport function addFavorite(countryName: string) {\r\n  return {\r\n    type: ADD_FAVORITE,\r\n    payload: countryName,\r\n  };\r\n}\r\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\r\nexport function removeFavorite(countryName: string) {\r\n  return {\r\n    type: REMOVE_FAVORITE,\r\n    payload: countryName,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}