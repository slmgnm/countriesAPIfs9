{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salee\\\\countriesAPIfs9\\\\src\\\\components\\\\searchCountry.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterCountriesRegion, filterCountriesSpecific, changeText } from \"../redux/actions\";\nimport { Container, InputAdornment, TextField, FormControl, InputLabel, Select, MenuItem } from \"@mui/material/\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchCountry = _ref => {\n  _s();\n\n  let {\n    filterCountriesSpecific,\n    filterCountriesRegion,\n    countries,\n    changeText,\n    textToSearch\n  } = _ref;\n  const [region, setRegion] = useState(\"All\");\n\n  const handleChangeCountry = event => {\n    changeText(event.target.value);\n    filterCountriesSpecific(event.target.value, countries);\n  };\n\n  const handleChangeRegion = event => {\n    setRegion(event.target.value);\n    filterCountriesRegion(event.target.value.toLowerCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      id: \"search-country\",\n      sx: {\n        m: 1,\n        width: \"400px\",\n        margin: \"50px 0\",\n        marginRight: \"20px\"\n      },\n      placeholder: \"Search for a country...\",\n      value: textToSearch,\n      onChange: handleChangeCountry,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: \"250px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"region-simple-select-label\",\n        children: \"Filter by Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"region-simple-select-label\",\n        id: \"simple-select-region\",\n        value: region,\n        label: \"Filter by Region\",\n        onChange: handleChangeRegion,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Africa\",\n          children: \"Africa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Americas\",\n          children: \"Americas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Asia\",\n          children: \"Asia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Europe\",\n          children: \"Europe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Oceania\",\n          children: \"Oceania\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"All\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchCountry, \"3aDCjWZ3+2DGvQvGZ6jZM+ZlIv0=\");\n\n_c = SearchCountry;\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.selectCurrentCountries,\n    textToSearch: state.textToFilter\n  };\n};\n\nconst mapDispatchToProps = {\n  filterCountriesRegion,\n  filterCountriesSpecific,\n  changeText\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchCountry\");","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/searchCountry.tsx"],"names":["React","useState","connect","filterCountriesRegion","filterCountriesSpecific","changeText","Container","InputAdornment","TextField","FormControl","InputLabel","Select","MenuItem","SearchIcon","SearchCountry","countries","textToSearch","region","setRegion","handleChangeCountry","event","target","value","handleChangeRegion","toLowerCase","display","justifyContent","alignItems","flexWrap","m","width","margin","marginRight","startAdornment","mapStateToProps","state","selectCurrentCountries","textToFilter","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect, DefaultRootState, MapStateToPropsParam } from \"react-redux\";\r\nimport {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n} from \"../redux/actions\";\r\nimport {\r\n  Container,\r\n  InputAdornment,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material/\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select/Select\";\r\n\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\ninterface IProps {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n  textToSearch?: string;\r\n  countries: ICountry[];\r\n}\r\nconst SearchCountry = ({\r\n  filterCountriesSpecific,\r\n  filterCountriesRegion,\r\n  countries,\r\n  changeText,\r\n  textToSearch,\r\n}: IProps) => {\r\n  const [region, setRegion] = useState(\"All\");\r\n  const handleChangeCountry = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    changeText(event.target.value);\r\n    filterCountriesSpecific(event.target.value, countries);\r\n  };\r\n  const handleChangeRegion = (event: SelectChangeEvent) => {\r\n    setRegion(event.target.value);\r\n    filterCountriesRegion(event.target.value.toLowerCase());\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        id=\"search-country\"\r\n        sx={{ m: 1, width: \"400px\", margin: \"50px 0\", marginRight: \"20px\" }}\r\n        placeholder=\"Search for a country...\"\r\n        value={textToSearch}\r\n        onChange={handleChangeCountry}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <FormControl sx={{ width: \"250px\" }}>\r\n        <InputLabel id=\"region-simple-select-label\">\r\n          Filter by Region\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"region-simple-select-label\"\r\n          id=\"simple-select-region\"\r\n          value={region}\r\n          label=\"Filter by Region\"\r\n          onChange={handleChangeRegion}\r\n        >\r\n          <MenuItem value={\"Africa\"}>Africa</MenuItem>\r\n          <MenuItem value={\"Americas\"}>Americas</MenuItem>\r\n          <MenuItem value={\"Asia\"}>Asia</MenuItem>\r\n          <MenuItem value={\"Europe\"}>Europe</MenuItem>\r\n          <MenuItem value={\"Oceania\"}>Oceania</MenuItem>\r\n          <MenuItem value={\"All\"}>All</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    countries: state.selectCurrentCountries,\r\n    textToSearch: state.textToFilter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps: {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n} = {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\r\n"]},"metadata":{},"sourceType":"module"}