{"ast":null,"code":"import _objectSpread from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{combineReducers}from\"redux\";import{ADD_FAVORITE,CHANGE_TEXT,CURRENT_COUNTRIES,DEFAULT_COUNTRIES_SPECIFIC,FILTER_COUNTRIES_REGION,FILTER_COUNTRIES_SPECIFIC,REMOVE_FAVORITE,SELECT_COUNTRY}from\"./actions\";var INITIAL_STATE={favoriteCountries:[],favorites:[]};function selectCurrentCountries(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case CURRENT_COUNTRIES:return payload;case FILTER_COUNTRIES_REGION:return payload;default:return state;}}function filterCountriesSpecific(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var _ref2=arguments.length>1?arguments[1]:undefined,type=_ref2.type,payload=_ref2.payload;switch(type){case FILTER_COUNTRIES_SPECIFIC:var regex=new RegExp(\"^\".concat(payload.text),\"gim\");var filterCountries=payload.countries.filter(function(c){return regex.test(c.name.common);});return filterCountries;case DEFAULT_COUNTRIES_SPECIFIC:return[];default:return state;}}function currentCountry(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref3=arguments.length>1?arguments[1]:undefined,type=_ref3.type,payload=_ref3.payload;switch(type){case SELECT_COUNTRY:return payload;default:return state;}}function textToFilter(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";var _ref4=arguments.length>1?arguments[1]:undefined,type=_ref4.type,payload=_ref4.payload;switch(type){case CHANGE_TEXT:return payload;default:return state;}}function favoriteCountries(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var _ref5=arguments.length>1?arguments[1]:undefined,type=_ref5.type,payload=_ref5.payload;// console.log(\"PAYLOAD:\", payload);\nswitch(type){case ADD_FAVORITE:var _favoriteCountries=_toConsumableArray(state.favoriteCountries);var favorites=_toConsumableArray(state.favorites);_favoriteCountries.push(payload);favorites.push(payload.name.common);return _objectSpread(_objectSpread({},state),{},{favoriteCountries:_favoriteCountries,favorites:favorites});case REMOVE_FAVORITE:var filteredCountries=_toConsumableArray(state.favoriteCountries).filter(function(country){return country.name.common!==payload;});console.log(\"filteredCountries:\",filteredCountries);var filteredFavorites=_toConsumableArray(state.favorites).filter(function(country){return country!==payload;});return _objectSpread(_objectSpread({},state),{},{favoriteCountries:filteredCountries,favorites:filteredFavorites});default:return state;}}var rootReducer=combineReducers({selectCurrentCountries:selectCurrentCountries,filterCountriesSpecific:filterCountriesSpecific,currentCountry:currentCountry,textToFilter:textToFilter,favoriteCountries:favoriteCountries});export default rootReducer;","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/redux/reducers.ts"],"names":["combineReducers","ADD_FAVORITE","CHANGE_TEXT","CURRENT_COUNTRIES","DEFAULT_COUNTRIES_SPECIFIC","FILTER_COUNTRIES_REGION","FILTER_COUNTRIES_SPECIFIC","REMOVE_FAVORITE","SELECT_COUNTRY","INITIAL_STATE","favoriteCountries","favorites","selectCurrentCountries","state","type","payload","filterCountriesSpecific","regex","RegExp","text","filterCountries","countries","filter","c","test","name","common","currentCountry","textToFilter","push","filteredCountries","country","console","log","filteredFavorites","rootReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_FAVORITE,\r\n  CHANGE_TEXT,\r\n  CURRENT_COUNTRIES,\r\n  DEFAULT_COUNTRIES_SPECIFIC,\r\n  FILTER_COUNTRIES_REGION,\r\n  FILTER_COUNTRIES_SPECIFIC,\r\n  REMOVE_FAVORITE,\r\n  SELECT_COUNTRY,\r\n} from \"./actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  favoriteCountries: [],\r\n  favorites: [],\r\n\r\n};\r\ninterface ICountrie {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\nfunction selectCurrentCountries(\r\n  state = [],\r\n  { type, payload }: { type: string; payload: ICountrie[] }\r\n) {\r\n  switch (type) {\r\n    case CURRENT_COUNTRIES:\r\n      return payload;\r\n    case FILTER_COUNTRIES_REGION:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction filterCountriesSpecific(\r\n  state = [],\r\n  {\r\n    type,\r\n    payload,\r\n  }: { type: string; payload: { text: string; countries: ICountrie[] } }\r\n) {\r\n  switch (type) {\r\n    case FILTER_COUNTRIES_SPECIFIC:\r\n      let regex = new RegExp(`^${payload.text}`, \"gim\");\r\n      let filterCountries = payload.countries.filter((c) =>\r\n        regex.test(c.name.common)\r\n      );\r\n      return filterCountries;\r\n    case DEFAULT_COUNTRIES_SPECIFIC:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\n\r\nfunction currentCountry(\r\n  state = {},\r\n  { type, payload }: { type: string; payload: ICountry }\r\n) {\r\n  switch (type) {\r\n    case SELECT_COUNTRY:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction textToFilter(\r\n  state = \"\",\r\n  { type, payload }: { type: string; payload: string }\r\n) {\r\n  switch (type) {\r\n    case CHANGE_TEXT:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction favoriteCountries(\r\n  state = INITIAL_STATE,\r\n  { type, payload }: { type: string; payload: ICountrie }\r\n) {\r\n  // console.log(\"PAYLOAD:\", payload);\r\n  switch (type) {\r\n    case ADD_FAVORITE:\r\n      const favoriteCountries: ICountrie[] = [...state.favoriteCountries];\r\n      const favorites: string[] = [...state.favorites];\r\n      favoriteCountries.push(payload);\r\n      favorites.push(payload.name.common);\r\n      return {\r\n        ...state,\r\n        favoriteCountries,\r\n        favorites,\r\n      };\r\n    case REMOVE_FAVORITE:\r\n      const filteredCountries = [...state.favoriteCountries].filter(\r\n        (country: any) => country.name.common !== payload\r\n      );\r\n      console.log(\"filteredCountries:\",filteredCountries);\r\n\r\n      const filteredFavorites = [...state.favorites].filter(\r\n        (country) => country !== payload\r\n      );\r\n      return {\r\n        ...state,\r\n        favoriteCountries: filteredCountries,\r\n        favorites: filteredFavorites,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  selectCurrentCountries,\r\n  filterCountriesSpecific,\r\n  currentCountry,\r\n  textToFilter,\r\n  favoriteCountries,\r\n});\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}