{"ast":null,"code":"import _slicedToArray from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{filterCountriesRegion,filterCountriesSpecific,changeText}from\"../redux/actions\";import{Container,InputAdornment,TextField,FormControl,InputLabel,Select,MenuItem}from\"@mui/material/\";import SearchIcon from\"@mui/icons-material/Search\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchCountry=function SearchCountry(_ref){var filterCountriesSpecific=_ref.filterCountriesSpecific,filterCountriesRegion=_ref.filterCountriesRegion,countries=_ref.countries,changeText=_ref.changeText,textToSearch=_ref.textToSearch;var _useState=useState(\"All\"),_useState2=_slicedToArray(_useState,2),region=_useState2[0],setRegion=_useState2[1];var handleChangeCountry=function handleChangeCountry(event){changeText(event.target.value);filterCountriesSpecific(event.target.value,countries);};var handleChangeRegion=function handleChangeRegion(event){setRegion(event.target.value);filterCountriesRegion(event.target.value.toLowerCase());};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",flexWrap:\"wrap\"},children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",id:\"search-country\",sx:{m:1,width:\"400px\",margin:\"50px 0\",marginRight:\"20px\"},placeholder:\"Search for a country...\",value:textToSearch,onChange:handleChangeCountry,InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})})}}),/*#__PURE__*/_jsxs(FormControl,{sx:{width:\"250px\"},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"region-simple-select-label\",children:\"Filter by Region\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"region-simple-select-label\",id:\"simple-select-region\",value:region,label:\"Filter by Region\",onChange:handleChangeRegion,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Africa\",children:\"Africa\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Americas\",children:\"Americas\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Asia\",children:\"Asia\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Europe\",children:\"Europe\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Oceania\",children:\"Oceania\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"All\",children:\"All\"})]})]})]});};var mapStateToProps=function mapStateToProps(state){return{countries:state.selectCurrentCountries,textToSearch:state.textToFilter};};var mapDispatchToProps={filterCountriesRegion:filterCountriesRegion,filterCountriesSpecific:filterCountriesSpecific,changeText:changeText};export default connect(mapStateToProps,mapDispatchToProps)(SearchCountry);","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/searchCountry.tsx"],"names":["React","useState","connect","filterCountriesRegion","filterCountriesSpecific","changeText","Container","InputAdornment","TextField","FormControl","InputLabel","Select","MenuItem","SearchIcon","SearchCountry","countries","textToSearch","region","setRegion","handleChangeCountry","event","target","value","handleChangeRegion","toLowerCase","display","justifyContent","alignItems","flexWrap","m","width","margin","marginRight","startAdornment","mapStateToProps","state","selectCurrentCountries","textToFilter","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect, DefaultRootState, MapStateToPropsParam } from \"react-redux\";\r\nimport {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n} from \"../redux/actions\";\r\nimport {\r\n  Container,\r\n  InputAdornment,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material/\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select/Select\";\r\n\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\ninterface IProps {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n  textToSearch?: string;\r\n  countries: ICountry[];\r\n}\r\nconst SearchCountry = ({\r\n  filterCountriesSpecific,\r\n  filterCountriesRegion,\r\n  countries,\r\n  changeText,\r\n  textToSearch,\r\n}: IProps) => {\r\n  const [region, setRegion] = useState(\"All\");\r\n  const handleChangeCountry = (\r\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) => {\r\n    changeText(event.target.value);\r\n    filterCountriesSpecific(event.target.value, countries);\r\n  };\r\n  const handleChangeRegion = (event: SelectChangeEvent) => {\r\n    setRegion(event.target.value);\r\n    filterCountriesRegion(event.target.value.toLowerCase());\r\n  };\r\n  return (\r\n    <Container\r\n      maxWidth=\"lg\"\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        id=\"search-country\"\r\n        sx={{ m: 1, width: \"400px\", margin: \"50px 0\", marginRight: \"20px\" }}\r\n        placeholder=\"Search for a country...\"\r\n        value={textToSearch}\r\n        onChange={handleChangeCountry}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <FormControl sx={{ width: \"250px\" }}>\r\n        <InputLabel id=\"region-simple-select-label\">\r\n          Filter by Region\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"region-simple-select-label\"\r\n          id=\"simple-select-region\"\r\n          value={region}\r\n          label=\"Filter by Region\"\r\n          onChange={handleChangeRegion}\r\n        >\r\n          <MenuItem value={\"Africa\"}>Africa</MenuItem>\r\n          <MenuItem value={\"Americas\"}>Americas</MenuItem>\r\n          <MenuItem value={\"Asia\"}>Asia</MenuItem>\r\n          <MenuItem value={\"Europe\"}>Europe</MenuItem>\r\n          <MenuItem value={\"Oceania\"}>Oceania</MenuItem>\r\n          <MenuItem value={\"All\"}>All</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    countries: state.selectCurrentCountries,\r\n    textToSearch: state.textToFilter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps: {\r\n  changeText: (arg: string) => void;\r\n  filterCountriesSpecific: (arga: string, argb: ICountry[]) => void;\r\n  filterCountriesRegion: (arg: string) => void;\r\n} = {\r\n  filterCountriesRegion,\r\n  filterCountriesSpecific,\r\n  changeText,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchCountry);\r\n"]},"metadata":{},"sourceType":"module"}