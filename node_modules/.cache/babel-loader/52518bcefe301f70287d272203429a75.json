{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salee\\\\countriesAPIfs9\\\\src\\\\components\\\\Favorite.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addFavorite, removeFavorite } from \"../redux/actions\";\nimport { Container, Card, CardMedia, Grid, Link, Typography, CardContent } from \"@mui/material/\"; // import { ICountries } from \"./interfaces\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favorite = _ref => {\n  let {\n    favoriteCountries\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        textAlign: \"center\",\n        paddingBottom: 10,\n        variant: \"h4\",\n        sx: {\n          fontWeight: \"bold\",\n          opacity: \"0.9\"\n        },\n        children: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 8,\n        id: \"countries\",\n        children: favoriteCountries === null || favoriteCountries === void 0 ? void 0 : favoriteCountries.map((country, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          sx: {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: `/${country.name.common}`,\n              underline: \"none\",\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                image: country.flags[1],\n                alt: `${country.name.common} flag`,\n                height: \"170px\",\n                sx: {\n                  borderBottom: \"1px solid #dbd6d6\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), \" \"]\n            }, country.name.common, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: \"info-ul-p\",\n                gutterBottom: true,\n                variant: \"h3\",\n                sx: {\n                  fontWeight: \"bold\",\n                  fontSize: \"19px\"\n                },\n                children: country.name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Favorite;\n\nconst mapStateToProps = state => {\n  return {\n    favoriteCountries: state.favoriteCountries.favoriteCountries\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addFavorite: a => dispatch(addFavorite(a)),\n  removeFavorite\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorite\");","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/Favorite.tsx"],"names":["React","connect","addFavorite","removeFavorite","Container","Card","CardMedia","Grid","Link","Typography","CardContent","Favorite","favoriteCountries","fontWeight","opacity","map","country","index","justifyContent","alignItems","flexWrap","name","common","flags","borderBottom","fontSize","mapStateToProps","state","mapDispatchToProps","dispatch","a"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFavorite, removeFavorite } from \"../redux/actions\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  Link,\r\n  Typography,\r\n  CardContent,\r\n} from \"@mui/material/\";\r\n// import { ICountries } from \"./interfaces\";\r\n\r\ninterface IProps {\r\n  favoriteCountries: {\r\n    capital: string[];\r\n    flags: string[];\r\n    name: {\r\n      common: string;\r\n      nativeName: any;\r\n      official: string;\r\n    };\r\n    population: number;\r\n    region: string;\r\n  }[];\r\n}\r\nconst Favorite: React.FC<IProps> = ({ favoriteCountries }) => {\r\n  return (\r\n    <>\r\n      <Container className='container'>\r\n        <Typography\r\n          textAlign='center'\r\n          paddingBottom={10}\r\n          variant='h4'\r\n          sx={{\r\n            fontWeight: \"bold\",\r\n            opacity: \"0.9\",\r\n          }}\r\n        >\r\n          Favorites\r\n        </Typography>\r\n        <Grid container spacing={8} id='countries'>\r\n          {favoriteCountries?.map((country, index) => (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              lg={3}\r\n              key={index}\r\n              sx={{\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              <Card key={index}>\r\n                <Link\r\n                  href={`/${country.name.common}`}\r\n                  underline='none'\r\n                  key={country.name.common}\r\n                >\r\n                  <CardMedia\r\n                    component='img'\r\n                    image={country.flags[1]}\r\n                    alt={`${country.name.common} flag`}\r\n                    height='170px'\r\n                    sx={{ borderBottom: \"1px solid #dbd6d6\" }}\r\n                  />{\" \"}\r\n                </Link>\r\n                <CardContent>\r\n                  <Typography\r\n                    className='info-ul-p'\r\n                    gutterBottom\r\n                    variant='h3'\r\n                    sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}\r\n                  >\r\n                    {country.name.common}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return { favoriteCountries: state.favoriteCountries.favoriteCountries };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  addFavorite: (a: string) => dispatch(addFavorite(a)),\r\n  removeFavorite,\r\n});\r\n\r\nexport default connect<IProps>(mapStateToProps, mapDispatchToProps)(Favorite);\r\n"]},"metadata":{},"sourceType":"module"}