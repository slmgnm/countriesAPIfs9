{"ast":null,"code":"import _slicedToArray from\"C:/Users/salee/countriesAPIfs9/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Header from\"../Header\";import{connect}from\"react-redux\";import{selectCountry}from\"../../redux/actions\";import{useNavigate,useParams}from\"react-router-dom\";import{Container,Button,Typography,Box}from\"@mui/material/\";import KeyboardBackspaceIcon from\"@mui/icons-material/KeyboardBackspace\";import\"../../index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var axios=require(\"axios\").default;;var Country=function Country(_ref){var selectCountry=_ref.selectCountry,country=_ref.country;var navigate=useNavigate();var params=useParams();var currentCountry=params.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),borders=_useState2[0],setBorders=_useState2[1];useEffect(function(){axios.get(\"https://restcountries.com/v3/name/\".concat(currentCountry,\"?fields=name,population,flags,tld,currencies,languages,borders,region,subregion,capital,\")).then(function(res){return selectCountry(res.data[0]);});},[]);useEffect(function(){if(country.borders!==undefined){var boarderingList=[];country.borders.forEach(function(border){axios.get(\"https://restcountries.com/v2/alpha?codes=\".concat(border)).then(function(res){return boarderingList.push(res.data[0].name);}).then(function(){if(boarderingList.length===country.borders.length){setBorders(boarderingList);}});});}},[country]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),country.region===undefined?null:/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",className:\"container\",children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",sx:{padding:\"5px 20px\"},onClick:function onClick(){return navigate(\"/\");},children:[/*#__PURE__*/_jsx(KeyboardBackspaceIcon,{sx:{marginRight:\"10px\"}}),/*#__PURE__*/_jsx(Typography,{sx:{typography:\"body2\",textTransform:\"none\"},children:\"Back\"})]}),/*#__PURE__*/_jsxs(Box,{className:\"box-individual-country\",children:[/*#__PURE__*/_jsx(Box,{className:\"img-country\",sx:{backgroundImage:\"url(\\\"\".concat(country.flags[1],\"\\\")\"),backgroundSize:\"cover\",backgroundPosition:\"center\",width:\"45%\",height:\"400\",boxShadow:3}}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",className:\"countryName\",children:country.name.common}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{className:\"info-ul-1\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},className:\"info-ul-p\",children:\"Native Name:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",className:\"info-ul-p\",children:country.name.nativeName[Object.keys(country.languages)[0]].common}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},className:\"info-ul-p\",children:\"Population:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",className:\"info-ul-p\",children:country.population}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Region:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",className:\"info-ul-p\",children:country.region}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Sub region:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",children:country.subregion}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Capital:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",children:country.capital[0]})]}),/*#__PURE__*/_jsxs(Box,{className:\"info-ul-2\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:[\"Top Level Domain:\",\" \"]}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",children:country.tld[0]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Currencies:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",children:country.currencies[Object.keys(country.currencies)[0]].name}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Languages:\"}),/*#__PURE__*/_jsx(Typography,{sx:{display:\"inline\",opacity:\"0.7\"},variant:\"body2\",children:country.languages[Object.keys(country.languages)[0]]})]}),/*#__PURE__*/_jsxs(Box,{className:\"border-countries\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{display:\"inline\",fontWeight:\"bold\",opacity:\"0.9\"},children:\"Border Countries:\"}),/*#__PURE__*/_jsxs(Box,{children:[country.borders.length===0?/*#__PURE__*/_jsx(Button,{sx:{marginRigth:\"5px\"},variant:\"contained\",className:\"btn-border\",children:\"No countries\"}):null,borders.map(function(border){return/*#__PURE__*/_jsx(Button,{sx:{marginRigth:\"5px\"},variant:\"contained\",className:\"btn-border\",href:\"/\".concat(border),children:border},border);})]})]})]})]})]})]})]});};var mapDispatchToProps={selectCountry:selectCountry};var mapStateToProps=function mapStateToProps(state){return{country:state.currentCountry};};export default connect(mapStateToProps,mapDispatchToProps)(Country);","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/country/Country.tsx"],"names":["React","useEffect","useState","Header","connect","selectCountry","useNavigate","useParams","Container","Button","Typography","Box","KeyboardBackspaceIcon","axios","require","default","Country","country","navigate","params","currentCountry","borders","setBorders","get","then","res","data","undefined","boarderingList","forEach","border","push","name","length","region","padding","marginRight","typography","textTransform","backgroundImage","flags","backgroundSize","backgroundPosition","width","height","boxShadow","common","display","fontWeight","opacity","nativeName","Object","keys","languages","population","subregion","capital","tld","currencies","marginRigth","map","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCountry } from \"../../redux/actions\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Container, Button, Typography, Box } from \"@mui/material/\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\nimport \"../../index.css\";\r\nconst axios = require(\"axios\").default;\r\ninterface ICountry  {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n};\r\ninterface IProps {\r\n  country: ICountry;\r\n  selectCountry: (arg: ICountry) => void;\r\n}\r\nconst Country: React.FC<IProps> = ({ selectCountry, country }) => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const currentCountry = params.country;\r\n  const [borders, setBorders] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://restcountries.com/v3/name/${currentCountry}?fields=name,population,flags,tld,currencies,languages,borders,region,subregion,capital,`\r\n      )\r\n      .then((res: any) => selectCountry(res.data[0]));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (country.borders !== undefined) {\r\n      let boarderingList: any = [];\r\n      country.borders.forEach((border: string) => {\r\n        axios\r\n          .get(`https://restcountries.com/v2/alpha?codes=${border}`)\r\n          .then((res: any) => boarderingList.push(res.data[0].name))\r\n          .then(() => {\r\n            if (boarderingList.length === country.borders.length) {\r\n              setBorders(boarderingList);\r\n            }\r\n          });\r\n      });\r\n    }\r\n  }, [country]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      {country.region === undefined ? null : (\r\n        <Container maxWidth=\"lg\" className=\"container\">\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ padding: \"5px 20px\" }}\r\n            onClick={() => navigate(\"/\")}\r\n          >\r\n            <KeyboardBackspaceIcon sx={{ marginRight: \"10px\" }} />\r\n            <Typography\r\n            \r\n              sx={{\r\n                typography: \"body2\",\r\n                textTransform: \"none\",\r\n              }}\r\n            >\r\n              Back\r\n            </Typography>\r\n          </Button>\r\n          <Box className=\"box-individual-country\">\r\n            <Box\r\n              className=\"img-country\"\r\n              sx={{\r\n                backgroundImage: `url(\"${country.flags[1]}\")`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                width: \"45%\",\r\n                height: \"400\",\r\n                boxShadow: 3,\r\n              }}\r\n            ></Box>\r\n            <Box>\r\n              <Typography variant=\"h2\" className=\"countryName\" >\r\n                {country.name.common}\r\n              </Typography>\r\n              <Box >\r\n                <Box className=\"info-ul-1\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Native Name:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {\r\n                      country.name.nativeName[Object.keys(country.languages)[0]]\r\n                        .common\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    Population:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className=\"info-ul-p\"\r\n                  >\r\n                    {country.population}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                    className='info-ul-p'\r\n                  >\r\n                    {country.region}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Sub region:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.subregion}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Capital:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.capital[0]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"info-ul-2\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Top Level Domain:{\" \"}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.tld[0]}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Currencies:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {\r\n                      country.currencies[Object.keys(country.currencies)[0]]\r\n                        .name\r\n                    }\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Languages:\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {country.languages[Object.keys(country.languages)[0]]}\r\n                  </Typography>\r\n                </Box>\r\n                <Box className=\"border-countries\">\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    sx={{\r\n                      display: \"inline\",\r\n                      fontWeight: \"bold\",\r\n                      opacity: \"0.9\",\r\n                    }}\r\n                  >\r\n                    Border Countries:\r\n                  </Typography>\r\n                  <Box>\r\n                    {country.borders.length === 0 ? (\r\n                      <Button\r\n                        sx={{ marginRigth: \"5px\" }}\r\n                        variant=\"contained\"\r\n                        className=\"btn-border\"\r\n                      >\r\n                        No countries\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    {borders.map((border) => {\r\n                      return (\r\n                        <Button\r\n                          sx={{ marginRigth: \"5px\" }}\r\n                          variant=\"contained\"\r\n                          className=\"btn-border\"\r\n                          href={`/${border}`}\r\n                          key={border}\r\n                        >\r\n                          {border}\r\n                        </Button>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\ninterface IState {\r\n  currentCountry?: any;\r\n  favoriteCountries?: { favoriteCountries: IProps; favorites: string[] };\r\n  filterCountriesSpecific?: [];\r\n  selectCurrentCountries?: IProps;\r\n  textToFilter?: string;\r\n}\r\nconst mapDispatchToProps = {\r\n  selectCountry,\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  return {\r\n    country: state.currentCountry,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);\r\n"]},"metadata":{},"sourceType":"module"}