{"ast":null,"code":"const axios = require(\"axios\").default;\n\nexport const CURRENT_COUNTRIES = \"CURRENT_COUNTRIES\";\nexport function currentCountries(url) {\n  return async dispatch => {\n    const countries = await axios.get(url);\n    dispatch({\n      type: CURRENT_COUNTRIES,\n      payload: countries.data\n    });\n  };\n}\nexport const FILTER_COUNTRIES_REGION = \"FILTER_COUNTRIES_REGION\";\nexport function filterCountriesRegion(region) {\n  return async dispatch => {\n    let url = `https://restcountries.com/v3/region/${region}?fields=name,population,flags,region,capital`;\n\n    if (region === \"all\") {\n      url = `https://restcountries.com/v3/all?fields=name,population,flags,region,capital`;\n    }\n\n    const countries = await axios.get(url);\n    dispatch({\n      type: FILTER_COUNTRIES_REGION,\n      payload: countries.data\n    });\n  };\n}\nexport const FILTER_COUNTRIES_SPECIFIC = \"FILTER_COUNTRIES_SPECIFIC\";\nexport function filterCountriesSpecific(text, countries) {\n  return {\n    type: FILTER_COUNTRIES_SPECIFIC,\n    payload: {\n      text,\n      countries\n    }\n  };\n}\nexport const DEFAULT_COUNTRIES_SPECIFIC = \"DEFAULT_COUNTRIES_SPECIFIC\";\nexport function defaultCountriesSpecific() {\n  return {\n    type: DEFAULT_COUNTRIES_SPECIFIC,\n    payload: \"\"\n  };\n}\nexport const SELECT_COUNTRY = \"SELECT_COUNTRY\";\nexport function selectCountry(country) {\n  return {\n    type: SELECT_COUNTRY,\n    payload: country\n  };\n}\nexport const CHANGE_TEXT = \"CHANGE_TEXT\";\nexport function changeText(text) {\n  // console.log(text);\n  return {\n    type: CHANGE_TEXT,\n    payload: text\n  };\n}\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport function addFavorite(countryName) {\n  return {\n    type: ADD_FAVORITE,\n    payload: countryName\n  };\n}\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\nexport function removeFavorite(countryName) {\n  return {\n    type: REMOVE_FAVORITE,\n    payload: countryName\n  };\n}","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/redux/actions.ts"],"names":["axios","require","default","CURRENT_COUNTRIES","currentCountries","url","dispatch","countries","get","type","payload","data","FILTER_COUNTRIES_REGION","filterCountriesRegion","region","FILTER_COUNTRIES_SPECIFIC","filterCountriesSpecific","text","DEFAULT_COUNTRIES_SPECIFIC","defaultCountriesSpecific","SELECT_COUNTRY","selectCountry","country","CHANGE_TEXT","changeText","ADD_FAVORITE","addFavorite","countryName","REMOVE_FAVORITE","removeFavorite"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAkBA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,SAASC,gBAAT,CAA0BC,GAA1B,EAAuC;AAC5C,SAAO,MACLC,QADK,IAEF;AACH,UAAMC,SAAS,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUH,GAAV,CAAxB;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,iBADC;AAEPO,MAAAA,OAAO,EAAEH,SAAS,CAACI;AAFZ,KAAD,CAAR;AAID,GARD;AASD;AAED,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAA+C;AACpD,SAAO,MACLR,QADK,IAEF;AACH,QAAID,GAAG,GAAI,uCAAsCS,MAAO,8CAAxD;;AACA,QAAIA,MAAM,KAAK,KAAf,EAAsB;AACpBT,MAAAA,GAAG,GAAI,8EAAP;AACD;;AACD,UAAME,SAAS,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUH,GAAV,CAAxB;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEG,uBADC;AAEPF,MAAAA,OAAO,EAAEH,SAAS,CAACI;AAFZ,KAAD,CAAR;AAID,GAZD;AAaD;AAED,OAAO,MAAMI,yBAAyB,GAAG,2BAAlC;AACP,OAAO,SAASC,uBAAT,CAAiCC,IAAjC,EAA+CV,SAA/C,EAAsE;AAC3E,SAAO;AACLE,IAAAA,IAAI,EAAEM,yBADD;AAELL,IAAAA,OAAO,EAAE;AAAEO,MAAAA,IAAF;AAAQV,MAAAA;AAAR;AAFJ,GAAP;AAID;AAED,OAAO,MAAMW,0BAA0B,GAAG,4BAAnC;AACP,OAAO,SAASC,wBAAT,GAAoC;AACzC,SAAO;AACLV,IAAAA,IAAI,EAAES,0BADD;AAELR,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID;AAiBD,OAAO,MAAMU,cAAc,GAAG,gBAAvB;AACP,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAA0C;AAC/C,SAAO;AACLb,IAAAA,IAAI,EAAEW,cADD;AAELV,IAAAA,OAAO,EAAEY;AAFJ,GAAP;AAID;AAED,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,SAASC,UAAT,CAAoBP,IAApB,EAAkC;AACvC;AACA,SAAO;AACLR,IAAAA,IAAI,EAAEc,WADD;AAELb,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID;AAED,OAAO,MAAMQ,YAAY,GAAG,cAArB;AACP,OAAO,SAASC,WAAT,CAAqBC,WAArB,EAA0C;AAC/C,SAAO;AACLlB,IAAAA,IAAI,EAAEgB,YADD;AAELf,IAAAA,OAAO,EAAEiB;AAFJ,GAAP;AAID;AACD,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,SAASC,cAAT,CAAwBF,WAAxB,EAA6C;AAClD,SAAO;AACLlB,IAAAA,IAAI,EAAEmB,eADD;AAELlB,IAAAA,OAAO,EAAEiB;AAFJ,GAAP;AAID","sourcesContent":["const axios = require(\"axios\").default;\r\ninterface ICountrie {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\n\r\nexport const CURRENT_COUNTRIES = \"CURRENT_COUNTRIES\";\r\nexport function currentCountries(url: string) {\r\n  return async (\r\n    dispatch: (arg0: { type: string; payload: ICountrie[] }) => void\r\n  ) => {\r\n    const countries = await axios.get(url);\r\n    dispatch({\r\n      type: CURRENT_COUNTRIES,\r\n      payload: countries.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport const FILTER_COUNTRIES_REGION = \"FILTER_COUNTRIES_REGION\";\r\nexport function filterCountriesRegion(region: string) {\r\n  return async (\r\n    dispatch: (arg0: { type: string; payload: ICountrie[] }) => void\r\n  ) => {\r\n    let url = `https://restcountries.com/v3/region/${region}?fields=name,population,flags,region,capital`;\r\n    if (region === \"all\") {\r\n      url = `https://restcountries.com/v3/all?fields=name,population,flags,region,capital`;\r\n    }\r\n    const countries = await axios.get(url);\r\n    dispatch({\r\n      type: FILTER_COUNTRIES_REGION,\r\n      payload: countries.data,\r\n    });\r\n  };\r\n}\r\n\r\nexport const FILTER_COUNTRIES_SPECIFIC = \"FILTER_COUNTRIES_SPECIFIC\";\r\nexport function filterCountriesSpecific(text: string, countries: ICountry[]) {\r\n  return {\r\n    type: FILTER_COUNTRIES_SPECIFIC,\r\n    payload: { text, countries },\r\n  };\r\n}\r\n\r\nexport const DEFAULT_COUNTRIES_SPECIFIC = \"DEFAULT_COUNTRIES_SPECIFIC\";\r\nexport function defaultCountriesSpecific() {\r\n  return {\r\n    type: DEFAULT_COUNTRIES_SPECIFIC,\r\n    payload: \"\",\r\n  };\r\n}\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName?: any;\r\n  };\r\n  tld: string[];\r\n  currencies: any;\r\n  capital: string[];\r\n  region: string;\r\n  subregion: string;\r\n  languages?: any;\r\n  borders?: any;\r\n  population: number;\r\n}\r\nexport const SELECT_COUNTRY = \"SELECT_COUNTRY\";\r\nexport function selectCountry(country: ICountry) {\r\n  return {\r\n    type: SELECT_COUNTRY,\r\n    payload: country,\r\n  };\r\n}\r\n\r\nexport const CHANGE_TEXT = \"CHANGE_TEXT\";\r\nexport function changeText(text: string) {\r\n  // console.log(text);\r\n  return {\r\n    type: CHANGE_TEXT,\r\n    payload: text,\r\n  };\r\n}\r\n\r\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\r\nexport function addFavorite(countryName: string) {\r\n  return {\r\n    type: ADD_FAVORITE,\r\n    payload: countryName,\r\n  };\r\n}\r\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\r\nexport function removeFavorite(countryName: string) {\r\n  return {\r\n    type: REMOVE_FAVORITE,\r\n    payload: countryName,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}