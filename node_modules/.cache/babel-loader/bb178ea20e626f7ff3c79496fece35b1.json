{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salee\\\\countriesAPIfs9\\\\src\\\\components\\\\countries\\\\Countries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Container, Card, CardMedia, CardContent, Typography, Grid, Box, Link, Button } from \"@mui/material/\";\nimport { connect } from \"react-redux\";\nimport { defaultCountriesSpecific, changeText, addFavorite, removeFavorite } from \"../../redux/actions\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\"; // import Country from \"../country/Country\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./style.css\";\n// import { useTheme } from \"@mui/material\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Countries(_ref) {\n  _s();\n\n  let {\n    countries,\n    filterCountries,\n    defaultCountriesSpecific,\n    changeText,\n    textToSearch,\n    addFavorite,\n    favorites,\n    removeFavorite\n  } = _ref;\n  useEffect(() => {\n    defaultCountriesSpecific();\n    changeText(\"\");\n  }, [countries]);\n  let countriesToShow = [];\n  filterCountries.length === 0 ? countriesToShow = countries : countriesToShow = filterCountries;\n  return textToSearch.length > 0 && filterCountries.length === 0 ? /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        fontWeight: \"bold\",\n        fontSize: \"19px\"\n      },\n      children: \"Not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 8,\n      id: \"countries\",\n      children: countriesToShow.map((country, index) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: `/${country.name.common}`,\n              underline: \"none\",\n              children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                image: country.flags[1],\n                alt: `${country.name.common} flag`,\n                height: \"170px\",\n                sx: {\n                  borderBottom: \"1px solid #dbd6d6\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, country.name.common, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h3\",\n                sx: {\n                  fontWeight: \"bold\",\n                  fontSize: \"19px\"\n                },\n                children: country.name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    display: \"inline\",\n                    fontWeight: \"bold\",\n                    opacity: \"0.9\"\n                  },\n                  children: \"Population:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: \"inline\",\n                    opacity: \"0.7\"\n                  },\n                  variant: \"body2\",\n                  children: country.population\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    display: \"inline\",\n                    fontWeight: \"bold\",\n                    opacity: \"0.9\"\n                  },\n                  children: \"Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: \"inline\",\n                    opacity: \"0.7\"\n                  },\n                  variant: \"body2\",\n                  children: country.region\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    display: \"inline\",\n                    fontWeight: \"bold\",\n                    opacity: \"0.9\"\n                  },\n                  children: \"Capital:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    display: \"inline\",\n                    opacity: \"0.7\"\n                  },\n                  variant: \"body2\",\n                  children: [country.capital[0], (favorites === null || favorites === void 0 ? void 0 : favorites.includes(country.name.common)) ? /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      removeFavorite(country.name.common);\n                    },\n                    style: {\n                      color: \"red\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      addFavorite(country);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Countries, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Countries;\n\nconst mapStateToProps = state => ({\n  textToSearch: state.textToFilter,\n  favoriteCountries: state.favoriteCountries.favoriteCountries,\n  favorites: state.favoriteCountries.favorites\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addFavorite: country => dispatch(addFavorite(country)),\n  removeFavorite: country => dispatch(removeFavorite(country)),\n  defaultCountriesSpecific,\n  changeText\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/Users/salee/countriesAPIfs9/src/components/countries/Countries.tsx"],"names":["React","useEffect","Container","Card","CardMedia","CardContent","Typography","Grid","Box","Link","Button","connect","defaultCountriesSpecific","changeText","addFavorite","removeFavorite","FavoriteBorderIcon","FavoriteIcon","Countries","countries","filterCountries","textToSearch","favorites","countriesToShow","length","fontWeight","fontSize","map","country","index","name","common","flags","borderBottom","display","opacity","population","region","capital","includes","color","mapStateToProps","state","textToFilter","favoriteCountries","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Button,\r\n} from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n  addFavorite,\r\n  removeFavorite,\r\n} from \"../../redux/actions\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\n// import Country from \"../country/Country\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./style.css\";\r\n// import { useTheme } from \"@mui/material\";\r\n\r\ninterface ICountry {\r\n  flags: string[];\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName: {\r\n      msa: {\r\n        official: string;\r\n        common: string;\r\n      };\r\n    };\r\n  };\r\n  capital: string[];\r\n  region: string;\r\n  population: number;\r\n}\r\n\r\nfunction Countries({\r\n  countries,\r\n  filterCountries,\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n  textToSearch,\r\n  addFavorite,\r\n  favorites,\r\n  removeFavorite,\r\n}: any) {\r\n  useEffect(() => {\r\n    defaultCountriesSpecific();\r\n    changeText(\"\");\r\n  }, [countries]);\r\n  let countriesToShow = [];\r\n  filterCountries.length === 0\r\n    ? (countriesToShow = countries)\r\n    : (countriesToShow = filterCountries);\r\n\r\n  return textToSearch.length > 0 && filterCountries.length === 0 ? (\r\n    <Container maxWidth='lg'>\r\n      <Typography variant='body1' sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}>\r\n        Not available\r\n      </Typography>\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <Grid container spacing={8} id='countries'>\r\n        {countriesToShow.map((country: ICountry, index: number) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\r\n              <Card>\r\n                <Link\r\n                  href={`/${country.name.common}`}\r\n                  underline='none'\r\n                  key={country.name.common}\r\n                >\r\n                  <CardMedia\r\n                    component='img'\r\n                    image={country.flags[1]}\r\n                    alt={`${country.name.common} flag`}\r\n                    height='170px'\r\n                    sx={{ borderBottom: \"1px solid #dbd6d6\" }}\r\n                  />\r\n                </Link>\r\n\r\n                <CardContent>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant='h3'\r\n                    sx={{ fontWeight: \"bold\", fontSize: \"19px\" }}\r\n                  >\r\n                    {country.name.common}\r\n                  </Typography>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Population:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.population}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Region:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.region}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography\r\n                      variant='subtitle2'\r\n                      sx={{\r\n                        display: \"inline\",\r\n                        fontWeight: \"bold\",\r\n                        opacity: \"0.9\",\r\n                      }}\r\n                    >\r\n                      Capital:\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{ display: \"inline\", opacity: \"0.7\" }}\r\n                      variant='body2'\r\n                    >\r\n                      {country.capital[0]}\r\n                      {favorites?.includes(country.name.common) ? (\r\n                        <Button\r\n                          onClick={() => {\r\n                            removeFavorite(country.name.common);\r\n                          }}\r\n                          style={{ color: \"red\" }}\r\n                        >\r\n                          <FavoriteIcon />\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          onClick={() => {\r\n                            addFavorite(country);\r\n                          }}\r\n                        >\r\n                          <FavoriteBorderIcon />\r\n                        </Button>\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  textToSearch: state.textToFilter,\r\n  favoriteCountries: state.favoriteCountries.favoriteCountries,\r\n  favorites: state.favoriteCountries.favorites,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: (arg: any) => null) => ({\r\n  addFavorite: (country: ICountry | any) => dispatch(addFavorite(country)),\r\n  removeFavorite: (country: ICountry | any) =>\r\n    dispatch(removeFavorite(country)),\r\n  defaultCountriesSpecific,\r\n  changeText,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Countries);\r\n"]},"metadata":{},"sourceType":"module"}